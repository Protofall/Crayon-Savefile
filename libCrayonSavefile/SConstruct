#Get arguments in the format we want
PLATFORM = ARGUMENTS.get('PLATFORM')
DEBUG = ARGUMENTS.get('DEBUG').lower()	#YOU CAN'T LOWER "None"
if DEBUG == 'true' or DEBUG == '1':
	DEBUG = True
if DEBUG == 'false' or DEBUG == '0':
	DEBUG = False

#Check if arguments are valid
supported_platforms = ['dreamcast', 'pc', 'all']
if PLATFORM == None or PLATFORM not in supported_platforms or DEBUG != False and DEBUG != True:
	print """
	Please specify the target platform to compile or clean Crayon Savefile for on the command
	line (eg. `scons PLATFORM=dreamcast DEBUG=false`).
	"""
	print "\tSupported platforms are:"
	for p in supported_platforms:
		print "\t- " + p

	exit(1)

#Start building the program
env = list()
specific_platform = list()

#Create the environments and platform name
import os
if PLATFORM == 'dreamcast' or PLATFORM == 'all':
	# The # symbol means relative to our working directory
	env.append(Environment(CPPPATH='#/include', CC = 'kos-cc', AR = 'kos-ar'))
	env[-1]['ENV'].update({k: v for k, v in os.environ.items() if k.startswith('KOS_')})	#Adding in KOS vars
	specific_platform.append('dreamcast')

from sys import platform
if PLATFORM == 'pc' or PLATFORM == 'all':
	env.append(Environment(CPPPATH='#/include'))
	if platform == "linux" or platform == "linux2":
		specific_platform.append('linux')
	elif platform == "win32":
		specific_platform.append('windows')
	elif platform == "darwin":
		specific_platform.append('mac')

#Create our library/s
for e, p in zip(env, specific_platform):	#zip stops at the shorter of the two lists
	#Add in some cflags if in debug mode
	if DEBUG == True:
		e['CFLAGS'].append('-g -DCRAYON_DEBUG=1')

	build_dir = 'build/' + p + '/'
	print 'build_dir: ' + build_dir
	e.VariantDir(build_dir, 'code', duplicate=0)	#Kind of moves over the processing for the code directory to our build dir
													#duplicate=0 means it won't duplicate the src files

	prog_files = Glob('#/' + build_dir + '*.c') #I know its weird, but we have to specify the output path here
	e.Library(target='#/lib/' + p + '/' + 'CrayonSavefile', source=prog_files)



Import('envs')

# Create our library/s
lib_dict = dict()
for env in envs:
	e = env.Clone()
	e['CPPPATH'] = e['CRAYON_SF_BASE'] + 'include/crayon_savefile'

	#Add in some cflags if in debug mode
	if e['DEBUG'] == True:
		e.AppendUnique(CPPDEFINES = [{'CRAYON_DEBUG':1}])
		# These can be helpful sometimes
		# e.AppendUnique(CPPFLAGS = ['-Wconversion', '-Wno-unused-parameter'])
		# conversion will check for type conversions (eg uint8_t var = (U32 VAR))
		# no-unused-parameter disables said check

	build_dir = 'build/'+ e['SPECIFIC_PLATFORM']
	e.VariantDir(build_dir, 'code', duplicate=0)	# Kind of moves over the processing for the code
													# directory to our build dir duplicate=0 means it
													# won't duplicate the src files

	prog_files = Glob(build_dir + '/*.c') # We have to specify the build path instead of the real one
	
	#Change the paths just so our output is nice
	# old_path = e['CPPPATH']
	# e['CPPPATH'] = e['CRAYON_SF_BASE'] + 'include/crayon_savefile'
	# print(e['CPPPATH'])
	
	lib_dict[e['SPECIFIC_PLATFORM']] = e.Library(target = 'lib/${SPECIFIC_PLATFORM}/CrayonSavefile', source = prog_files)
	
	# e['CPPPATH'] = old_path

Return('lib_dict')
